spring:
  redis:
#    host: 192.168.30.130
#    port: 6379
    sentinel:
      master: mymaster
      nodes: 192.168.30.101:26379,192.168.30.102:26397,192.168.30.130:26397
    database: 0
    lettuce:
      shutdown-timeout: 1800000
      pool:
        max-active: 20
        max-wait: -1
        min-idle: 0
        max-idle: 5
##############################################################
  jdbc:
    template:
      query-timeout: 3
  thymeleaf:
    prefix: classpath:/templates/
    check-template-location: true
    cache: false
    suffix: .html
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 100MB
############################################################
  datasource:
    url: jdbc:mysql://localhost:3306/agv?characterEncoding=utf-8&useUnicode=true&useSSL=false
    driver-class-name: com.mysql.jdbc.Driver  # mysql8.0以前使用com.mysql.jdbc.Driver
    username: root
    password: 123456
    platform: mysql
    #通过这句配置将druid连接池引入到我们的配置中，spring会尽可能判断类型是什么，然后根据情况去匹配驱动类。
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      initial-size: 5  # 初始化大小
      min-idle: 5  # 最小
      max-active: 100  # 最大
      max-wait: 60000  # 配置获取连接等待超时的时间
      time-between-eviction-runs-millis: 60000  # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      min-evictable-idle-time-millis: 300000  # 指定一个空闲连接最少空闲多久后可被清除，单位是毫秒
      validationQuery: select 'x'
      test-while-idle: true  # 当连接空闲时，是否执行连接测试
      test-on-borrow: false  # 当从连接池借用连接时，是否测试该连接
      test-on-return: false  # 在连接归还到连接池时是否测试该连接
      filters: config,wall,stat  # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      poolPreparedStatements: true # 打开PSCache，并且指定每个连接上PSCache的大小
      maxPoolPreparedStatementPerConnectionSize: 20
      maxOpenPreparedStatements: 20
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.slowSqlMillis=200;druid.stat.logSlowSql=true;config.decrypt=false
      # 合并多个DruidDataSource的监控数据
      #use-global-data-source-stat: true
      #WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter
      web-stat-filter:
        enabled: true #是否启用StatFilter默认值true
        url-pattern: /*
        exclusions: /druid/*,*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico
        session-stat-enable: true
        session-stat-max-count: 10
      #StatViewServlet配置，说明请参考Druid Wiki，配置_StatViewServlet配置
      stat-view-servlet:
        enabled: true #是否启用StatViewServlet默认值true
        url-pattern: /druid/*
        reset-enable: true
        login-username: admin
        login-password: admin
####################################################################
#配置mybatis的两个规则
mybatis:
   #  config-location: classpath:mybatis/mybatis-config.xml
  mapper-locations: classpath:mybatis/mapper/*.xml
   #  开启驼峰命名原则，但是在yaml中写这个配置项，config-location就用不了了，删除就好。
  configuration:
    map-underscore-to-camel-case: true
######################################################################
eureka:
  client:
    register-with-eureka: true
    #    是否从EurekaServer端抓取已有的注册信息，默认为true，集群环境下必须设置才能配合ribbon实现负载均衡
    fetch-registry: true
    service-url:
      #      defaultZone: http://localhost:7001/eureka
      defaultZone: http://eureka7001.com:7001/eureka,http://eureka7003.com:7003/eureka
  instance:
    instance-id: AGV8001  #暴露对外的服务名称
    prefer-ip-address: true
    # Eureka客户端向服务心跳的时间间隔是1s，默认是30秒
    lease-renewal-interval-in-seconds: 2
    # Eureka服务端在收到一次心跳后等待时间上限是2s，默认是90s，超时将剔除该微服务，其实Eureka服务端已经设置了，可能就是也告诉服务提供者一下
    lease-expiration-duration-in-seconds: 10
